<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Navigation Bar Example</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav>
        <ul class="navbar">
            <li><a href="#home" class="active">Home</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#services">Services</a></li>
            <li><a href="#contact">Contact</a></li>
        </ul>
    </nav>
    <section id="home">
        <h1>Welcome to Home</h1>
        <p>This is the home section.</p>
    </section>
    <section id="about">
        <h1>About Us</h1>
        <p>This is the about section.</p>
    </section>
    <section id="services">
        <h1>Our Services</h1>
        <p>This is the services section.</p>
    </section>
    <section id="contact">
        <h1>Contact Us</h1>
        <p>This is the contact section.</p>
    </section>
</body>
</html>

assign 1 Css..........
body {
    font-family: Arial, sans-serif;
}

nav {
    background-color: #333;
}

.navbar {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
}

.navbar li {
    float: left;
}

.navbar li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

.navbar li a:hover {
    background-color: #111;
}

.navbar li a.active {
    background-color: #4CAF50;
}

--------------------------------------------------------------
Assignment 2:
html:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple HTML Page</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Welcome to My Simple HTML Page</h1>
    </header>
    <section>
        <h2>About This Page</h2>
        <p>This page is a simple HTML document that demonstrates basic HTML structure and elements.</p>
    </section>
    <article>
        <h2>Article Section</h2>
        <p>This section contains an article about HTML structure and elements.</p>
    </article>
    <section>
        <h2>Sample Data Table</h2>
        <table border="1">
            <tr>
                <th>Column 1</th>
                <th>Column 2</th>
                <th>Column 3</th>
            </tr>
            <tr>
                <td>Row 1, Cell 1</td>
                <td>Row 1, Cell 2</td>
                <td>Row 1, Cell 3</td>
            </tr>
            <tr>
                <td>Row 2, Cell 1</td>
                <td>Row 2, Cell 2</td>
                <td>Row 2, Cell 3</td>
            </tr>
        </table>
    </section>
    <section>
        <h2>Contact Form</h2>
        <form action="#" method="post">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>
            <input type="submit" value="Submit">
        </form>
    </section>
</body>
</html>


assgn 2 :
Css:

body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0;
}

header, section, article {
    margin: 20px;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

header {
    background-color: #f4f4f4;
}

h1, h2 {
    color: #333;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
}

table, th, td {
    border: 1px solid #ddd;
}

th, td {
    padding: 8px;
    text-align: left;
}

form {
    margin: 20px 0;
}

label {
    display: block;
    margin-bottom: 5px;
}

input[type="text"], input[type="email"] {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

input[type="submit"] {
    padding: 10px 15px;
    border: none;
    background-color: #4CAF50;
    color: white;
    cursor: pointer;
    border-radius: 5px;
}

input[type="submit"]:hover {
    background-color: #45a049;
}

------------------------------------------------------------------------------------------
assignment 3: html;;;;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-Column Layout</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>My Website</h1>
    </header>
    <nav>
        <ul>
            <li><a href="#home">Home</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#services">Services</a></li>
            <li><a href="#contact">Contact</a></li>
        </ul>
    </nav>
    <main>
        <div class="column">Column 1 Content</div>
        <div class="column">Column 2 Content</div>
        <div class="column">Column 3 Content</div>
    </main>
    <footer>
        <p>Footer Content</p>
    </footer>
</body>
</html>



assignment css.......
* {
    box-sizing: border-box;
}

/* General styles */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

/* Header */
header {
    background-color: #4CAF50;
    color: white;
    text-align: center;
    padding: 1em;
}

/* Navigation */
nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333;
}

nav ul li {
    float: left;
}

nav ul li a {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

nav ul li a:hover {
    background-color: #111;
}

/* Main content */
main {
    display: flex;
    flex-wrap: wrap;
    padding: 1em;
}

.column {
    flex: 1;
    padding: 1em;
    margin: 1em;
    background-color: #f4f4f4;
    border: 1px solid #ddd;
}

/* Footer */
footer {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 1em;
    position: fixed;
    width: 100%;
    bottom: 0;
}


-----------------------------------------------------------------------------------------------------------
assignment 4:
html

nav ul li a {
    transition: background-color 0.3s;
}

nav ul li a:hover {
    background-color: #111;
}

/* Example form animation */
form input {
    transition: all 0.3s ease-in-out;
}

form input:focus {
    border-color: #4CAF50;
    box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
    nav ul li {
        float: none;
    }

    .column {
        flex: 100%;
        margin: 0;
    }
}

assignment csss......
<form>
    <label for="name">Name:</label>
    <input type="text" id="name" name="name">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email">
    <input type="submit" value="Submit">
</form>
---------------------------------------------------------------------------------------------

Assignment 5:

<!DOCTYPE html>
<html>
<head>
    <title>Bootstrap Integration</title>
    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Your Brand</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item active">
                        <a class="nav-link" href="#">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Services</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Contact</a>
                    </li>
                </ul>
            </div>
        </nav>

        <h2>Sample Table</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Email</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">1</th>
                    <td>John</td>
                    <td>Doe</td>
                    <td>john.doe@example.com</td>
                </tr>
                <!-- Add more rows as needed -->
            </tbody>
        </table>

        <h2>Sample Form</h2>
        <form>
            <div class="form-group">
                <label for="exampleInputEmail1">Email address</label>
                <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <!-- Include Bootstrap JS (optional for certain components) -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
-------------------------------------------------------------------------------------------------------
implementation:


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=<device-width>, initial-scale=1.0">
    <title>Document</title>
  <script src="script.js"></script>  
    <!-- <script src="employee.js"></script> -->
    <!-- <script type="module" src="main.js"></script> -->
   
</head>
<body>
    <!-- <h1 id="message"></h1> -->
 <h1>I am a body of this Page</h1>
 
</body>
</html>
................
jscript:

/*
console.log("Hi");// dynamically typed programming language
var c=9; //outdated
let a=10;
const pi=3.14;
console.log('a value is '+a);
console.log('pi value is '+pi);
console.log('c value is '+c);
*/
 
/* //try alert box
let uname=prompt("Enter ur name?");
console.log("entered name is "+uname);
*/
 
/*
 
//if else
let age=60; let gender='female';
 
if(age>60 && gender=='female'){
console.log("u can avail special conc");
}
else
{
console.log("sorry , u can not");
}
 
console.log("bye");
 
*/
 
// Looping statement - for, while,do while
 
/*
for(let i=1;i<=5;i++){
  //  console.log("Hello");
    console.log(i);
 }
*/
 
/*
let i=10;
while(i>=1){
    console.log(i);
    i--;
 
}
*/
 
 
/*let i=10;
 
do{
    console.log(i);
    i--;
}
while(i>=1);
*/
 
/*
let arr=['Maria','priya','swathi','archu'];
//for loop
for(i=0;i<arr.length;i++){
    console.log(arr[i]);
}
//for each loop
for(let name1 of  arr){
    console.log(name1);
}
*/
 
/* //example function 1
 function addNumbers(a,b){// defining the function
    return a+b;
   
 }
 console.log(addNumbers(4,5)); // calling the function
console.log(addNumbers);
console.log(typeof(addNumbers));
*/
/*
//example function 2
function isPositive(num){
     return num>0
}
console.log(isPositive(3));
*/
/*
//example function 3
function sayHello(){
    console.log('Hello');
}
sayHello();//Hello
*/
 
/*
//example function 4 // default parameter
function greet(uname ='there'){
    console.log('hi',uname)
}
greet('Maria');
*/
/*
//example function 5
let isEven =function(num){
    return num%2==0
}
console.log(isEven(6));
*/
 
let volume=function(l,b,h){
    return l*b*h;
    }
  //  console.log(volume(1,2,3));
 
    let volume1=(l,b,h) =>l*b*h;
    console.log(volume1(1,2,3));

...............................................................................................

another jscript:

class Employee {
    // Private fields
    #name;
    #age;
 
    // Static field
    static company = 'Tech Corp';
 
    // Constructor
    constructor(name, age) {
        this.#name = name;
        this.#age = age;
    }
 
    // Getter for name
    get name() {
        return this.#name;
    }
// ==(value check) ===(type check)
    // Setter for name
    set name(newName) {
        if (typeof newName === 'string' && newName.length > 0) {
            this.#name = newName;
        } else {
            console.error('Invalid name');
        }
    }
 
    // Getter for age
    get age() {
        return this.#age;
    }
 
    // Setter for age
    set age(newAge) {
        if (Number.isInteger(newAge) && newAge > 0) {
            this.#age = newAge;
        } else {
            console.error('Invalid age');
        }
    }
 
    // Method
    describe() {
        console.log(`Employee: ${this.#name}, Age: ${this.#age}`);
    }
 
    // Static method
    static companyInfo() {
        console.log(`Company: ${Employee.company}`);
    }
 
    // Private method
    #privateMethod() {
        console.log('This is a private method.');
    }
 
    // Method to demonstrate access to private method
    publicMethod() {
        this.#privateMethod();
    }
}
 
// Creating an instance of the class
const emp1 = new Employee('Alice', 30);
 
// Accessing static method
Employee.companyInfo(); // Output: Company: Tech Corp
 
// Accessing instance methods
emp1.describe(); // Output: Employee: Alice, Age: 30
 
// Using getter and setter
console.log(emp1.name); // Output: Alice
emp1.name = 'Bob';
console.log(emp1.name); // Output: Bob
 
console.log(emp1.age); // Output: 30
emp1.age = 35;
console.log(emp1.age); // Output: 35
 
// Attempting to set invalid values
emp1.name = ''; // Output: Invalid name
emp1.age = -5; // Output: Invalid age
 
// Accessing public method which in turn accesses private method
emp1.publicMethod(); // Output: This is a private method.
 
 
 
 
 
 
/*
Private Fields:
Private fields are defined with the # prefix and can only
be accessed within the class.
#name;
#age;
 
Static Field:
Static fields are defined using the static keyword.
They are shared among all instances of the class.
static company = 'Tech Corp';
 
Constructor:
The constructor method is used to initialize the instance
properties.
constructor(name, age) {
    this.#name = name;
    this.#age = age;
}
 
Getter and Setter:
Getters and setters allow controlled access and modification
of private fields.
 
get name() {
    return this.#name;
}
 
set name(newName) {
    if (typeof newName === 'string' && newName.length > 0) {
        this.#name = newName;
    } else {
        console.error('Invalid name');
    }
}
 
Instance Methods:
Methods that operate on instances of the class.
describe() {
    console.log(`Employee: ${this.#name}, Age: ${this.#age}`);
}
 
Static Methods:
Methods that operate on the class itself rather than instances.
static companyInfo() {
    console.log(`Company: ${Employee.company}`);
}
 
Private Methods:
Private methods are also defined with the # prefix and can
only be called within the class.
#privateMethod() {
    console.log('This is a private method.');
}
*/

..............................................
eclipse use :

// Importing named exports
import { add, subtract } from './math.js';
 
// Importing default export
import pi from './math.js';
 
console.log('This is main class and the methods are exported from math.js');
console.log(add(2, 3));        // Output: 5
console.log(subtract(5, 3));   // Output: 2
console.log(pi);               // Output: 3.14159


...........................................................

ex:2

// Named export
export function add(a, b) {
    return a + b;
}
 
export function subtract(a, b) {
    return a - b;
}
 
// Default export
const pi = 3.14159;
export default pi;

------------------------------------------


